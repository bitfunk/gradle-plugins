?eu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTestteu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project WHEN version() THEN version returned$1teu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project WHEN version() THEN version returned$2çeu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project, snapshot version WHEN versionCleaned() THEN version returned$1çeu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project, snapshot version WHEN versionCleaned() THEN version returned$2ïeu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project, feature snapshot version WHEN versionCleaned() THEN version returned$1ïeu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project, feature snapshot version WHEN versionCleaned() THEN version returned$2äeu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project, final version WHEN versionCleaned() THEN version returned$1äeu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project, final version WHEN versionCleaned() THEN version returned$2|eu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project WHEN versionCode() THEN versionCode returned$1|eu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project WHEN versionCode() THEN versionCode returned$2|eu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project WHEN versionCode() THEN versionCode returned$3Éeu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project WHEN versionCodeFeature() THEN versionCode returned$1Éeu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project WHEN versionCodeFeature() THEN versionCode returned$2Éeu/bitfunk/gradle/plugin/tool/versioning/ProjectExtensionKtTest$GIVEN project WHEN versionCodeFeature() THEN versionCode returned$3Aeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTestëeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN unsupported branch name WHEN generateVersionName() THEN throw exception$1ëeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN unsupported branch name WHEN generateVersionName() THEN throw exception$2Ñeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN null branch WHEN generateVersionName() THEN semver version$1Ñeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN null branch WHEN generateVersionName() THEN semver version$2Ñeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN null branch WHEN generateVersionName() THEN semver version$3îeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN main branch and tag version WHEN generateVersionName() THEN semver version$1îeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN main branch and tag version WHEN generateVersionName() THEN semver version$2îeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN main branch and tag version WHEN generateVersionName() THEN semver version$3§eu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN main branch and tag version with starting v WHEN generateVersionName() THEN semver version$1§eu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN main branch and tag version with starting v WHEN generateVersionName() THEN semver version$2§eu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN main branch and tag version with starting v WHEN generateVersionName() THEN semver version$3üeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN main branch and dirty version WHEN generateVersionName() THEN semver snapshot version$1üeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN main branch and dirty version WHEN generateVersionName() THEN semver snapshot version$2üeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN main branch and dirty version WHEN generateVersionName() THEN semver snapshot version$3üeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN main branch and dirty version WHEN generateVersionName() THEN semver snapshot version$4ôeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN release branch and clean version WHEN generateVersionName() THEN semver version$1ôeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN release branch and clean version WHEN generateVersionName() THEN semver version$2ôeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN release branch and clean version WHEN generateVersionName() THEN semver version$3ôeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN release branch and clean version WHEN generateVersionName() THEN semver version$4ôeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN feature branch and dirty version WHEN generateVersionName() THEN semver version$1ôeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN feature branch and dirty version WHEN generateVersionName() THEN semver version$2ôeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN feature branch and dirty version WHEN generateVersionName() THEN semver version$3ôeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN feature branch and dirty version WHEN generateVersionName() THEN semver version$4§eu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN feature branch, dirty version, zero commits WHEN generateVersionName() THEN semver version$1§eu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN feature branch, dirty version, zero commits WHEN generateVersionName() THEN semver version$2§eu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN feature branch, dirty version, zero commits WHEN generateVersionName() THEN semver version$3§eu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN feature branch, dirty version, zero commits WHEN generateVersionName() THEN semver version$4•eu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN feature branch with ticket and dirty version WHEN generateVersionName() THEN semver version$1•eu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN feature branch with ticket and dirty version WHEN generateVersionName() THEN semver version$2•eu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN feature branch with ticket and dirty version WHEN generateVersionName() THEN semver version$3•eu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN feature branch with ticket and dirty version WHEN generateVersionName() THEN semver version$4úeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN dependabot branch and clean version WHEN generateVersionName() THEN semver version$1úeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN dependabot branch and clean version WHEN generateVersionName() THEN semver version$2úeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN dependabot branch and clean version WHEN generateVersionName() THEN semver version$3úeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN dependabot branch and clean version WHEN generateVersionName() THEN semver version$4Ñeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN renovate configure branch WHEN generateVersionName() THEN $1Ñeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN renovate configure branch WHEN generateVersionName() THEN $2Ñeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN renovate configure branch WHEN generateVersionName() THEN $3Ñeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN renovate configure branch WHEN generateVersionName() THEN $4ùeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN versionCode, no commitDistance WHEN generateVersionCode() THEN versionCode shifted $1ùeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN versionCode, no commitDistance WHEN generateVersionCode() THEN versionCode shifted $2öeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN versionCode, commitDistance WHEN generateVersionCode() THEN versionCode shifted $1öeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN versionCode, commitDistance WHEN generateVersionCode() THEN versionCode shifted $2èeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN versionDetails WHEN generateVersionDetails() THEN all details printed$1èeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN versionDetails WHEN generateVersionDetails() THEN all details printed$2èeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN versionDetails WHEN generateVersionDetails() THEN all details printed$3èeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN versionDetails WHEN generateVersionDetails() THEN all details printed$4èeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN versionDetails WHEN generateVersionDetails() THEN all details printed$5èeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN versionDetails WHEN generateVersionDetails() THEN all details printed$6èeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN versionDetails WHEN generateVersionDetails() THEN all details printed$7èeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$GIVEN versionDetails WHEN generateVersionDetails() THEN all details printed$8Zeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$mockLoadGitVersionInfo$1Zeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$mockLoadGitVersionInfo$2Zeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$mockLoadGitVersionInfo$3Zeu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$mockLoadGitVersionInfo$4Keu/bitfunk/gradle/plugin/tool/versioning/VersionNameGeneratorTest$Companion=eu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTestreu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN addPlugins() THEN plugins added$1reu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN addPlugins() THEN plugins added$2}eu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN configureVersion() THEN version configured$1}eu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN configureVersion() THEN version configured$2}eu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN configureVersion() THEN version configured$3}eu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN configureVersion() THEN version configured$4}eu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN configureVersion() THEN version configured$5}eu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN configureVersion() THEN version configured$6àeu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN configureVersionTasks() THEN version tasks configured$1àeu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN configureVersionTasks() THEN version tasks configured$2àeu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN configureVersionTasks() THEN version tasks configured$3àeu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN configureVersionTasks() THEN version tasks configured$4àeu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN configureVersionTasks() THEN version tasks configured$5àeu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN configureVersionTasks() THEN version tasks configured$6neu/bitfunk/gradle/plugin/tool/versioning/VersioningPluginTest$GIVEN project WHEN apply() THEN all configured$1                                                                                                       