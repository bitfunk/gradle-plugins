public abstract interface class eu/bitfunk/gradle/plugin/tool/composite/delegator/CompositeDelegatorContract {
	public static final field Companion Leu/bitfunk/gradle/plugin/tool/composite/delegator/CompositeDelegatorContract$Companion;
	public static final field EXTENSION_NAME Ljava/lang/String;
}

public final class eu/bitfunk/gradle/plugin/tool/composite/delegator/CompositeDelegatorContract$Companion {
	public static final field EXTENSION_NAME Ljava/lang/String;
}

public abstract interface class eu/bitfunk/gradle/plugin/tool/composite/delegator/CompositeDelegatorContract$Extension {
	public abstract fun getAdditionalTasks ()Lorg/gradle/api/provider/ListProperty;
}

public abstract interface class eu/bitfunk/gradle/plugin/tool/composite/delegator/CompositeDelegatorContract$Plugin {
	public abstract fun addExtension (Lorg/gradle/api/Project;)Leu/bitfunk/gradle/plugin/tool/composite/delegator/CompositeDelegatorContract$Extension;
	public abstract fun configureTasks (Lorg/gradle/api/Project;Leu/bitfunk/gradle/plugin/tool/composite/delegator/CompositeDelegatorContract$Extension;)V
}

public final class eu/bitfunk/gradle/plugin/tool/composite/delegator/CompositeDelegatorPlugin : eu/bitfunk/gradle/plugin/tool/composite/delegator/CompositeDelegatorContract$Plugin, org/gradle/api/Plugin {
	public fun <init> ()V
	public fun addExtension (Lorg/gradle/api/Project;)Leu/bitfunk/gradle/plugin/tool/composite/delegator/CompositeDelegatorContract$Extension;
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
	public fun configureTasks (Lorg/gradle/api/Project;Leu/bitfunk/gradle/plugin/tool/composite/delegator/CompositeDelegatorContract$Extension;)V
}

public abstract interface class eu/bitfunk/gradle/plugin/tool/composite/delegator/CompositeDelegatorPluginExtension : eu/bitfunk/gradle/plugin/tool/composite/delegator/CompositeDelegatorContract$Extension {
}

