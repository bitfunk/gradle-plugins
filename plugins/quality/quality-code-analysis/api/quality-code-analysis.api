public abstract interface class eu/bitfunk/gradle/plugin/quality/code/analysis/CodeAnalysisContract {
}

public abstract interface class eu/bitfunk/gradle/plugin/quality/code/analysis/CodeAnalysisContract$Plugin {
	public abstract fun addPlugins (Lorg/gradle/api/Project;)V
	public abstract fun configureAnalysis (Lorg/gradle/api/Project;)V
}

public final class eu/bitfunk/gradle/plugin/quality/code/analysis/CodeAnalysisPlugin : eu/bitfunk/gradle/plugin/quality/code/analysis/CodeAnalysisContract$Plugin, org/gradle/api/Plugin {
	public fun <init> ()V
	public fun addPlugins (Lorg/gradle/api/Project;)V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
	public fun configureAnalysis (Lorg/gradle/api/Project;)V
}

public final class eu/bitfunk/gradle/plugin/quality/code/analysis/LibsVersionCatalogAccessor : eu/bitfunk/gradle/plugin/version/catalog/accessor/BaseVersionCatalogAccessor {
	public fun <init> (Lorg/gradle/api/Project;)V
	public final fun getBundles ()Leu/bitfunk/gradle/plugin/version/catalog/accessor/VersionCatalogDependency$Group;
	public final fun getGradleDetektPlugin ()Leu/bitfunk/gradle/plugin/version/catalog/accessor/VersionCatalogDependency$Leaf;
	public final fun getPlugins ()Leu/bitfunk/gradle/plugin/version/catalog/accessor/VersionCatalogDependency$Group;
	public final fun getVersions ()Leu/bitfunk/gradle/plugin/version/catalog/accessor/VersionCatalogDependency$Group;
}

public abstract class eu/bitfunk/gradle/plugin/version/catalog/accessor/BaseVersionCatalogAccessor {
	public fun <init> (Lorg/gradle/api/Project;Ljava/lang/String;)V
	protected final fun findBundle (Ljava/lang/String;)Ljava/lang/String;
	protected final fun findLibrary (Ljava/lang/String;)Ljava/lang/String;
	protected final fun findPlugin (Ljava/lang/String;)Ljava/lang/String;
	protected final fun findVersion (Ljava/lang/String;)Ljava/lang/String;
}

public abstract interface class eu/bitfunk/gradle/plugin/version/catalog/accessor/VersionCatalogDependency {
}

public abstract interface class eu/bitfunk/gradle/plugin/version/catalog/accessor/VersionCatalogDependency$Group : eu/bitfunk/gradle/plugin/version/catalog/accessor/VersionCatalogDependency {
}

public abstract interface class eu/bitfunk/gradle/plugin/version/catalog/accessor/VersionCatalogDependency$GroupLeaf : eu/bitfunk/gradle/plugin/version/catalog/accessor/VersionCatalogDependency {
	public abstract fun get ()Ljava/lang/String;
}

public abstract interface class eu/bitfunk/gradle/plugin/version/catalog/accessor/VersionCatalogDependency$Leaf : eu/bitfunk/gradle/plugin/version/catalog/accessor/VersionCatalogDependency {
	public abstract fun get ()Ljava/lang/String;
}

