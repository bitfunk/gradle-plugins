Feu/bitfunk/gradle/plugin/development/convention/GradleExtensionsKtTestÇeu/bitfunk/gradle/plugin/development/convention/GradleExtensionsKtTest$GIVEN project WHEN javaPlugin() THEN extension configured$1Çeu/bitfunk/gradle/plugin/development/convention/GradleExtensionsKtTest$GIVEN project WHEN javaPlugin() THEN extension configured$2~eu/bitfunk/gradle/plugin/development/convention/GradleExtensionsKtTest$GIVEN project WHEN jacoco() THEN extension configured$1~eu/bitfunk/gradle/plugin/development/convention/GradleExtensionsKtTest$GIVEN project WHEN jacoco() THEN extension configured$2Åeu/bitfunk/gradle/plugin/development/convention/GradleExtensionsKtTest$GIVEN dependencyHandler WHEN implementation() THEN added$1Öeu/bitfunk/gradle/plugin/development/convention/GradleExtensionsKtTest$GIVEN dependencyHandler WHEN testImplementation() THEN added$1Çeu/bitfunk/gradle/plugin/development/convention/GradleExtensionsKtTest$GIVEN dependencyHandler WHEN testRuntimeOnly() THEN added$1Keu/bitfunk/gradle/plugin/development/convention/GradleKotlinExtensionKtTestÜeu/bitfunk/gradle/plugin/development/convention/GradleKotlinExtensionKtTest$GIVEN project WHEN kotlinJvm() THEN extension configured$1Üeu/bitfunk/gradle/plugin/development/convention/GradleKotlinExtensionKtTest$GIVEN project WHEN kotlinJvm() THEN extension configured$2Zeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginFunctionalTestdeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginFunctionalTest$CompanionPeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest†eu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN Gradle version 7_1 WHEN checkPreconditions() THEN throw GradleException$1†eu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN Gradle version 7_1 WHEN checkPreconditions() THEN throw GradleException$2íeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN checkPreconditions() THEN conditions are met$1Æeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN checkPreconditions() THEN conditions are met$$inlined$assertDoesNotThrow$1Æeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN checkPreconditions() THEN conditions are met$$inlined$assertDoesNotThrow$2ãeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN addPlugins() THEN all plugins present$1ãeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN addPlugins() THEN all plugins present$2ìeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN addRepositories() THEN mavenCentral available$1ìeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN addRepositories() THEN mavenCentral available$2±eu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$1±eu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$2±eu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$3±eu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$4±eu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$5±eu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$6±eu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$7±eu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$8óeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureJavaCompatibility() THEN java configured$1óeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureJavaCompatibility() THEN java configured$2óeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureJavaCompatibility() THEN java configured$3éeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureKotlin() THEN kotlin configured$1éeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureKotlin() THEN kotlin configured$2éeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureKotlin() THEN kotlin configured$3éeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureKotlin() THEN kotlin configured$4ïeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureDependencies() THEN dependencies added$1ïeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureDependencies() THEN dependencies added$2ïeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureDependencies() THEN dependencies added$3åeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureTests() THEN tests configured$1åeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureTests() THEN tests configured$2åeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureTests() THEN tests configured$3åeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureTests() THEN tests configured$4åeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureTests() THEN tests configured$5õeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureTestCoverage() THEN test coverage configured$1õeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureTestCoverage() THEN test coverage configured$2õeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureTestCoverage() THEN test coverage configured$3õeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureTestCoverage() THEN test coverage configured$4òeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureTestCoverageTasks() THEN tasks configured$1òeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureTestCoverageTasks() THEN tasks configured$2ueu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestReportTask$1ueu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestReportTask$2ueu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestReportTask$3ueu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestReportTask$4ueu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestReportTask$5ueu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestReportTask$6Éeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestCoverageVerificationTask$1Éeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestCoverageVerificationTask$2Éeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestCoverageVerificationTask$3Éeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestCoverageVerificationTask$4Éeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestCoverageVerificationTask$5Éeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestCoverageVerificationTask$6Éeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestCoverageVerificationTask$7Éeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestCoverageVerificationTask$8Éeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenJacocoTestCoverageVerificationTask$9jeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenCheckTask$1jeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenCheckTask$2jeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$configureGivenCheckTask$3ñeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureGradleWrapper() THEN wrapper configured$1ñeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureGradleWrapper() THEN wrapper configured$2ñeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureGradleWrapper() THEN wrapper configured$3ñeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN configureGradleWrapper() THEN wrapper configured$4Åeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN apply() THEN all configured$1Åeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN apply() THEN all configured$2Åeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN apply() THEN all configured$3Åeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN apply() THEN all configured$4Åeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN apply() THEN all configured$5Åeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN apply() THEN all configured$6Åeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN apply() THEN all configured$7Åeu/bitfunk/gradle/plugin/development/convention/GradlePluginConventionPluginTest$GIVEN project WHEN apply() THEN all configured$8Meu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTestUeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$setup$1Ueu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$setup$2Ueu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$setup$3Ueu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$setup$4Ueu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$setup$5Ueu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$setup$6Ueu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$setup$7Ueu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$setup$8ëeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN all plugins present$1ìeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN publishing configured$1ìeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN publishing configured$2óeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN publishing pom configured$1óeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN publishing pom configured$2óeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN publishing pom configured$3óeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN publishing pom configured$4óeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN publishing pom configured$5óeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN publishing pom configured$6óeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN publishing pom configured$7óeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN publishing pom configured$8óeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN publishing pom configured$9òeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN publishing pom configured$10òeu/bitfunk/gradle/plugin/development/convention/internal/PublishingConfigTest$GIVEN project WHEN configurePublishing() THEN publishing pom configured$11                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            