heu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginFunctionalTestreu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginFunctionalTest$Companion^eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTestÆeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN Gradle version 7_1 WHEN checkPreconditions() THEN throw GradleException$1Æeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN Gradle version 7_1 WHEN checkPreconditions() THEN throw GradleException$2ºeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN rootProject different to project WHEN checkPreconditions() THEN throw GradleException$1ºeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN rootProject different to project WHEN checkPreconditions() THEN throw GradleException$2∂eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN java-gradle-plugin missing WHEN checkPreconditions() THEN throw GradleException$1∂eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN java-gradle-plugin missing WHEN checkPreconditions() THEN throw GradleException$2∂eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN java-gradle-plugin missing WHEN checkPreconditions() THEN throw GradleException$3∂eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN java-gradle-plugin missing WHEN checkPreconditions() THEN throw GradleException$4Æeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN kotlin-dsl missing WHEN checkPreconditions() THEN throw GradleException$1Æeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN kotlin-dsl missing WHEN checkPreconditions() THEN throw GradleException$2Æeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN kotlin-dsl missing WHEN checkPreconditions() THEN throw GradleException$3Æeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN kotlin-dsl missing WHEN checkPreconditions() THEN throw GradleException$4Æeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN kotlin-dsl missing WHEN checkPreconditions() THEN throw GradleException$5öeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN all required WHEN checkPreconditions() THEN success$1öeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN all required WHEN checkPreconditions() THEN success$2öeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN all required WHEN checkPreconditions() THEN success$3öeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN all required WHEN checkPreconditions() THEN success$4öeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN all required WHEN checkPreconditions() THEN success$5øeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$1øeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$2øeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$3øeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$4øeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$5øeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$6øeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with plugin WHEN addExtension() THEN extension is added to project with defaults$7¡eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project and extension WHEN addSourceGeneratorTask() THEN task is registered and configured$1¡eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project and extension WHEN addSourceGeneratorTask() THEN task is registered and configured$2¡eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project and extension WHEN addSourceGeneratorTask() THEN task is registered and configured$3≠eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project WHEN addGeneratorTask() THEN task is registered and configured$1≠eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project WHEN addGeneratorTask() THEN task is registered and configured$2≠eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project WHEN addGeneratorTask() THEN task is registered and configured$3≠eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project WHEN addGeneratorTask() THEN task is registered and configured$4≠eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project WHEN addGeneratorTask() THEN task is registered and configured$5≠eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project WHEN addGeneratorTask() THEN task is registered and configured$6∞eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$1∞eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$2∞eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$3∞eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$4∞eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$5∞eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$6∞eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$7∞eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$8∞eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$9±eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$10±eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$11±eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$12±eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$13±eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project with jacoco WHEN configureCodeCoverage() THEN coverage configured$14∑eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project without jacoco WHEN configureCodeCoverage() THEN coverage not configured$1∑eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project without jacoco WHEN configureCodeCoverage() THEN coverage not configured$2èeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project WHEN apply() THEN all configured$1èeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project WHEN apply() THEN all configured$2èeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project WHEN apply() THEN all configured$3èeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorPluginTest$GIVEN project WHEN apply() THEN all configured$4keu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorSourceGeneratorTaskTest®eu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorSourceGeneratorTaskTest$GIVEN project without properties WHEN generate() THEN fail$1Æeu/bitfunk/gradle/plugin/development/version/catalog/accessor/VersionCatalogAccessorSourceGeneratorTaskTest$GIVEN project with catalogSourceFolder WHEN generate() THEN fail$1Neu/bitfunk/gradle/plugin/development/version/catalog/accessor/fake/FakeProjectjeu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorContractseu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorContract$Versionsteu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorContract$Librariesreu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorContract$Bundlesreu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorContract$Pluginsbeu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessormeu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessor$versions$1leu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessor$bundles$1leu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessor$plugins$1feu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTestneu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$setup$1neu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$setup$2neu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$setup$3≥eu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN invalid version WHEN findVersion() THEN throw NoSuchElementException$1°eu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN versionName WHEN findVersion() THEN return version$1°eu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN versionName WHEN findVersion() THEN return version$2°eu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN versionName WHEN findVersion() THEN return version$3≥eu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN invalid library WHEN findLibrary() THEN throw NoSuchElementException$1°eu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN libraryName WHEN findLibrary() THEN return library$1°eu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN libraryName WHEN findLibrary() THEN return library$2°eu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN libraryName WHEN findLibrary() THEN return library$3°eu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN libraryName WHEN findLibrary() THEN return library$4±eu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN invalid bundle WHEN findBundle() THEN throw NoSuchElementException$1ûeu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN bundleName WHEN findBundle() THEN return bundle$1ûeu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN bundleName WHEN findBundle() THEN return bundle$2ûeu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN bundleName WHEN findBundle() THEN return bundle$3ûeu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN bundleName WHEN findBundle() THEN return bundle$4±eu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN invalid plugin WHEN findPlugin() THEN throw NoSuchElementException$1ûeu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN pluginName WHEN findPlugin() THEN return plugin$1ûeu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN pluginName WHEN findPlugin() THEN return plugin$2ûeu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN pluginName WHEN findPlugin() THEN return plugin$3ûeu/bitfunk/gradle/plugin/development/version/catalog/accessor/generated/TestVersionCatalogAccessorTest$GIVEN pluginName WHEN findPlugin() THEN return plugin$4Veu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest¢eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest$GIVEN catalogNames WHEN generate() THEN accessor present in output folder$1¢eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest$GIVEN catalogNames WHEN generate() THEN accessor present in output folder$2¢eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest$GIVEN catalogNames WHEN generate() THEN accessor present in output folder$3¢eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest$GIVEN catalogNames WHEN generate() THEN accessor present in output folder$4≥eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest$GIVEN catalogNames and sourceFolder WHEN generate() THEN accessor present in output folder$1≥eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest$GIVEN catalogNames and sourceFolder WHEN generate() THEN accessor present in output folder$2≥eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest$GIVEN catalogNames and sourceFolder WHEN generate() THEN accessor present in output folder$3≥eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest$GIVEN catalogNames and sourceFolder WHEN generate() THEN accessor present in output folder$4±eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest$GIVEN catalogNames, sourceFolder, packageName WHEN generate() THEN all present in output$1±eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest$GIVEN catalogNames, sourceFolder, packageName WHEN generate() THEN all present in output$2±eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest$GIVEN catalogNames, sourceFolder, packageName WHEN generate() THEN all present in output$3±eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest$GIVEN catalogNames, sourceFolder, packageName WHEN generate() THEN all present in output$4`eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTaskTest$CompanionReu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTestZeu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTest$setup$1£eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTest$GIVEN catalog with versions WHEN generate() THEN return accessor with versions$1•eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTest$GIVEN catalog with libraries WHEN generate() THEN return accessor with libraries$1°eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTest$GIVEN catalog with bundles WHEN generate() THEN return accessor with bundles$1°eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTest$GIVEN catalog with plugins WHEN generate() THEN return accessor with plugins$1\eu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/GeneratorTest$CompanionOeu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/MapperTestOeu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/ParserTestbeu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/VersionInterfaceGeneratorTestSeu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/model/NodeTestTeu/bitfunk/gradle/plugin/development/version/catalog/accessor/intern/test/FileHelper                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   